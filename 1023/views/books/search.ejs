<div class="my-5">
    <h1 class="text-center">도서검색</h1>
    <div class="row justify-content-end"> <!--justify-content-end 오른쪽 끝으로 정렬--> 
        <form name ="frm" class="col-md-4 clo-lg-3"> <!--옆으로 열두칸 중에서 4칸만 사용--> 
            <div class="input-group">
                <input name="query" class="form-control">
                <button class="btn btn-primary">검색</button>
            </div>
        </form>
    </div>
    <div id="div_books"></div> <!--div_books로 도서검색템플릿이 들어옴-->
    <!--이전 다음 페이지-->
    <div class="text-center"> <!--가운데로 이동-->
        <button id="prev" class="btn btn-primary">이전</button>
        <span id="span_page" class="mx-3">1/10</span> <!--mx로 양옆 정렬-->
        <button id="next" class="btn btn-primary">다음</button>
    </div>
</div>

<!--도서검색템플릿-->
<script id="temp_books" type="x-handlebars-template">
    <table class="table">
        <tr>
            <td colspan="6">
                <input type="checkbox" id="all">
                <a class="btn btn-primary btn-sm mb-3" id="save">선택저장</a>
            </td> 
        </tr>
        {{#each documents}}
        <tr>
            <td><input type="checkbox" class="chk" book="{{toString @this}}"></td>
            <td><img idx="{{@index}}" src="{{isImage thumbnail}}" width="50" style="cursor:pointer;"></td>
            <td>{{title}}</td>
            <td>{{fmtPrice price}}</td>
            <td>{{authors}}</td>
            <td><button class="btn btn-outline-primary" book="{{toString @this}}">도서저장</button></td>
        </tr>
        <%-include("modal.ejs")%>
        {{/each}}
    </table>
</script>

<script>
    Handlebars.registerHelper("toString", function(book){
        return JSON.stringify(book); //js 함수 JSON을 스트링으로 변환
    });

    Handlebars.registerHelper("isImage", function(image){//이미지유무 체크
        if(image){
            return image;
        }else{
            return "http://via.placeholder.com/170x230";
        }
    });

    Handlebars.registerHelper("fmtPrice",function(price){ //가격에 콤마찍지
        return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + "원"
    });
</script>

<script>
    let query="자바";
    let page=1;
    getBooks();

    // 선택저장버튼을 클릭한 경우
    $("#div_books").on("click", "#save", function(){
        const chk=$("#div_books .chk:checked").length;
        if(chk==0){
            alert("저장할 도서를 선택하세요!");
            return;
        }

        if(confirm(chk + "개 도서를 저장하시겠습니까?")){
            let count=0;
            $("#div_books .chk:checked").each(function(){
                const book=JSON.parse($(this).attr("book"));
                const authors=book.authors.join();
                $.ajax({
                    type:"post",
                    url:"/books/search/insert",
                    data:{...book, authors},
                    success:function(data){
                        if(data==0) count++;
                    }
                });
            });
            setTimeout(function(){
                alert(count + "개 저장되었습니다.");
                $("#div_books .chk").prop("checked", false);
                $("#div_books #all").prop("checked", false);
            },1000);
        }
    });

    //전체선택 체크박스를 클릭한 경우
    $("#div_books").on("click", "#all", function(){
        if($(this).is(":checked")){//상태확인은 콜론(:)
            $("#div_books .chk").prop("checked", true);
        }else{
            $("#div_books .chk").prop("checked", false);
        }
    });

    // 각행의 체크박스를 클릭한 경우
    $("#div_books").on("click", ".chk", function(){
        const all=$("#div_books .chk").length;
        const chk=$("#div_books .chk:checked").length;
        // alert(all + "," + chk);
        if(all==chk){
            $("#div_books #all").prop("checked", true);
        }else{
            $("#div_books #all").prop("checked", false);
        }
    });

    //도서등록 버튼을 클릭한 경우
    $("#div_books").on("click", "button", function(){
        //alert('..');
        const book=JSON.parse($(this).attr("book"));
        const authors = book.authors.join();
        // const title = book.title;
        // const thumbnail = book.thumbnail;
        // const contents=book.contents;
        // const publisher=book.publisher;
        // const price=book.price;
        // const isbn=book.isbn;
        
        if(confirm("도서를 등록하실래요?")){
            $.ajax({
               type:"post",
               url:"/books/search/insert",
               data: {...book, authors}, //원래있던 데이터를 ...으로 복사
               success : function(data){
                if(data == '0'){
                    alert("도서가 등록되었습니다.");
                }else{
                    alert("이미 등록된 도서입니다.")
                }
               } 
            });
        }
    });

    //이미지를 클릭한 경우
    $("#div_books").on("click", "img", function(){
        const idx = $(this).attr("idx");
        $("#modal" + idx).modal("show");
    });

    $("#next").on("click", function(){ //다음페이지 이동
        page++;
        getBooks();
    });

    $("#prev").on("click", function(){ // 이전페이지 이동
        page--;
        getBooks();
    });

    $(frm).on("submit", function(e){ 
        e.preventDefault(); //검색경우 반짝 하지않게함
        query=$(frm.query).val(); //새로운 val값으로 변경
        page=1;
        if(query==""){ // 검색챙에 글이 없을때
            alert("검색어를 입력하세요")
            $(frm.query).focus(); // 검색창에 깜빡
        }else{
            getBooks();//검색 했을 경우 getBooks함수로 출력
        }
    });

    function getBooks(){ // 함수정의
        $.ajax({ //페이지가 통신하며 변화지않음(반짝 변하지않게), jQuery
            type:"get",
            url:"https://dapi.kakao.com/v3/search/book?target=title",
            headers:{"Authorization":"KakaoAK 05aee704d58be14c51f824d12f4406d2"}, // 나의 키
            data:{query:query, page:page, size:5},
            success : function(data){
                console.log(data);
                const temp=Handlebars.compile($("#temp_books").html()); // compile에 저장
                $("#div_books").html(temp(data));// 최종(div_books) 결과물 출력
                const last=Math.ceil(data.meta.pageable_count/5); // 마지막 페이지 ceil : 반올림
                $("#span_page").html(`${page}/${last}`); //이전 다음 페이지의 수
               
                // 페이지가 1페이지인 경우
                if(page==1) $("#prev").attr("disabled", true); //attr 속성을 바꿔줄때, disabled 불가능
                else $("#prev").attr("disabled", false);

                //페이지가 마지막인 경우
                if(data.meta.is_end) $("#next").attr("disabled", true);
                else $("#next").attr("disabled", false);
 
            }
        });
    }
</script>